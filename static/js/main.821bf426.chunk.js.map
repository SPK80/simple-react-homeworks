{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h1/AlternativeMessage.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/AlternativeGreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","alt","corner","circle","square","messageBox","name","messageText","time","AlternativeMessage","messageData","alternativeMessageData","HW1","Affair","affair","priority","lowPriority","middlePriority","highPriority","getPriorityStyle","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","af","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","SuperButton","red","finalClassName","default","Greeting","setNameCallback","addUser","totalUsers","greeting","errorMessage","addButton","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","trimmedName","trim","alert","AlternativeGreeting","changeName","confirm","placeholder","alternativeErrorMessage","usersCount","greetingMessage","alternativeGreetingMessage","AlternativeGreetingContainer","setGreetingMessage","setErrorMessage","newName","setTimeout","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.821bf426.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputError\":\"Greeting_inputError__3cSIY\",\"errorMessage\":\"Greeting_errorMessage__2bS7H\",\"greeting\":\"Greeting_greeting__1Ln72\",\"addButton\":\"Greeting_addButton__opMZF\",\"totalUsers\":\"Greeting_totalUsers__2spLi\",\"alternativeGreetingMessage\":\"Greeting_alternativeGreetingMessage__1GDtv\",\"alternativeErrorMessage\":\"Greeting_alternativeErrorMessage__ftJ_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__WTiIA\",\"avatar\":\"Message_avatar__2Ih_l\",\"corner\":\"Message_corner__2g0MJ\",\"circle\":\"Message_circle___c6cT\",\"square\":\"Message_square__1kBGo\",\"messageBox\":\"Message_messageBox__1CV-G\",\"name\":\"Message_name__2jRkE\",\"messageText\":\"Message_messageText__zLp-b\",\"time\":\"Message_time__14GLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"AlternativeMessage_message__nMcFp\",\"avatar\":\"AlternativeMessage_avatar__1_bZD\",\"corner\":\"AlternativeMessage_corner__3nNsy\",\"circle\":\"AlternativeMessage_circle__3GXps\",\"square\":\"AlternativeMessage_square__3ahkp\",\"messageBox\":\"AlternativeMessage_messageBox__AM9_R\",\"name\":\"AlternativeMessage_name__2xgLl\",\"messageText\":\"AlternativeMessage_messageText__2rQD1\",\"time\":\"AlternativeMessage_time__1Wza2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__4MuGY\",\"affair\":\"Affairs_affair__39PnF\",\"name\":\"Affairs_name__2ZMT7\",\"lowPriority\":\"Affairs_lowPriority__2qVaF\",\"middlePriority\":\"Affairs_middlePriority__1E6yC\",\"highPriority\":\"Affairs_highPriority__8C6TJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__2Mh8F\",\"superInput\":\"SuperInputText_superInput__aF9us\",\"error\":\"SuperInputText_error__1N1h6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__a7-_M\",\"red\":\"SuperButton_red__2Vckv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2Y1IF\",\"column\":\"HW4_column__faimC\",\"testSpanError\":\"HW4_testSpanError__HKpqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1_NDs\",\"spanClassName\":\"SuperCheckbox_spanClassName__1UBeM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Ez_mi\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n\tavatar: string\r\n\tname: string\r\n\tmessage: string\r\n\ttime: string\r\n}\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t\r\n\t\t\t<img className={s.avatar}\r\n\t\t\t\t\t src={props.avatar}\r\n\t\t\t\t\t alt={'avatar'}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<div className={s.corner}>\r\n\t\t\t\t<div className={s.circle}></div>\r\n\t\t\t\t<div className={s.square}></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className={s.messageBox}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className={s.name}>\r\n\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.messageText}>\r\n\t\t\t\t\t\t{props.message}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.time}>\r\n\t\t\t\t\t{props.time}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from \"./AlternativeMessage.module.css\";\r\n\r\ntype AlternativeMessagePropsType = {\r\n\tavatar: string\r\n\tname: string\r\n\tmessage: string\r\n\ttime: string\r\n}\r\n\r\nconst AlternativeMessage = (props: AlternativeMessagePropsType) => {\r\n\treturn (\r\n\t\t<div className={s.message}>\r\n\t\t\t\r\n\t\t\t<img className={s.avatar}\r\n\t\t\t\t\t src={props.avatar}\r\n\t\t\t\t\t alt={'avatar'}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<div className={s.corner}>\r\n\t\t\t\t<div className={s.circle}></div>\r\n\t\t\t\t<div className={s.square}></div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className={s.messageBox}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className={s.name}>\r\n\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.messageText}>\r\n\t\t\t\t\t\t{props.message}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.time}>\r\n\t\t\t\t\t{props.time}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AlternativeMessage;","import React from 'react'\r\nimport Message from \"./Message\";\r\nimport AlternativeMessage from \"./AlternativeMessage\";\r\n\r\nconst messageData = {\r\n\tavatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n\tname: 'Some Name',\r\n\tmessage: 'some text',\r\n\ttime: '22:00',\r\n}\r\n\r\nconst alternativeMessageData = {\r\n\tavatar: 'https://avatars.githubusercontent.com/u/36849366?s=100',\r\n\tname: 'SPK80',\r\n\tmessage: `How do? <^_^>\r\n  It\\`s me!`,\r\n\ttime: '02:00',\r\n}\r\n\r\nfunction HW1() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<hr/>\r\n\t\t\thomeworks 1\r\n\t\t\t\r\n\t\t\t{/*should work (должно работать)*/}\r\n\t\t\t\r\n\t\t\t<Message\r\n\t\t\t\tavatar={messageData.avatar}\r\n\t\t\t\tname={messageData.name}\r\n\t\t\t\tmessage={messageData.message}\r\n\t\t\t\ttime={messageData.time}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<hr/>\r\n\t\t\t{/*для личного творчества, могу проверить*/}\r\n\t\t\t<AlternativeMessage\r\n\t\t\t\tavatar={alternativeMessageData.avatar}\r\n\t\t\t\tname={alternativeMessageData.name}\r\n\t\t\t\tmessage={alternativeMessageData.message}\r\n\t\t\t\ttime={alternativeMessageData.time}/>\r\n\t\t\t<hr/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairPriorityType, AffairType} from \"./HW2\";\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairPropsType = {\r\n\t// key не нужно типизировать\r\n\taffair: AffairType\r\n\tdeleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\tconst deleteCallback = () => {\r\n\t\tprops.deleteAffairCallback(props.affair._id)\r\n\t}\r\n\t\r\n\tconst getPriorityStyle = (priority: AffairPriorityType) => {\r\n\t\tswitch (priority) {\r\n\t\t\tcase \"low\":\r\n\t\t\t\treturn s.lowPriority\r\n\t\t\tcase \"middle\":\r\n\t\t\t\treturn s.middlePriority\r\n\t\t\tcase \"high\":\r\n\t\t\t\treturn s.highPriority\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={s.affair}>\r\n\t\t\t<div className={s.name}>{props.affair.name}</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className={getPriorityStyle(props.affair.priority)}>{props.affair.priority}</div>\r\n\t\t\t\t<button onClick={deleteCallback}>❌</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from \"./Affairs.module.css\"\r\n\r\ntype AffairsPropsType = {\r\n\tdata: Array<AffairType>\r\n\tsetFilter: (filter: FilterType) => void\r\n\tdeleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\tconst mappedAffairs = props.data.map((a: AffairType) => (\r\n\t\t<Affair // should work\r\n\t\t\tkey={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n\t\t\taffair={a}\r\n\t\t\tdeleteAffairCallback={props.deleteAffairCallback}\r\n\t\t/>\r\n\t))\r\n\t\r\n\tconst setAll = () => {\r\n\t\tprops.setFilter(\"all\")\r\n\t} // need to fix\r\n\tconst setHigh = () => {\r\n\t\tprops.setFilter(\"high\")\r\n\t}\r\n\tconst setMiddle = () => {\r\n\t\tprops.setFilter(\"middle\")\r\n\t}\r\n\tconst setLow = () => {\r\n\t\tprops.setFilter(\"low\")\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={s.affairs}>\r\n\t\t\t\r\n\t\t\t{mappedAffairs}\r\n\t\t\t\r\n\t\t\t<button onClick={setAll}>All</button>\r\n\t\t\t<button onClick={setHigh}>High</button>\r\n\t\t\t<button onClick={setMiddle}>Middle</button>\r\n\t\t\t<button onClick={setLow}>Low</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\n\r\nexport type AffairType = {\r\n\t_id: number\r\n\tname: string\r\n\tpriority: AffairPriorityType\r\n}\r\n\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n\t{_id: 1, name: 'React', priority: 'high'},\r\n\t{_id: 2, name: 'anime', priority: 'low'},\r\n\t{_id: 3, name: 'games', priority: 'low'},\r\n\t{_id: 4, name: 'work', priority: 'high'},\r\n\t{_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n\tif (filter === 'all') return affairs\r\n\telse return affairs.filter(af => af.priority === filter)\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => {\r\n\treturn affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n\tconst [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n\tconst [filter, setFilter] = useState<FilterType>('all')\r\n\t\r\n\tconst filteredAffairs = filterAffairs(affairs, filter)\r\n\tconst deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<hr/>\r\n\t\t\thomeworks 2\r\n\t\t\t\r\n\t\t\t{/*should work (должно работать)*/}\r\n\t\t\t<Affairs\r\n\t\t\t\tdata={filteredAffairs}\r\n\t\t\t\tsetFilter={setFilter}\r\n\t\t\t\tdeleteAffairCallback={deleteAffairCallback}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<hr/>\r\n\t\t\t{/*для личного творчества, могу проверить*/}\r\n\t\t\t{/*<AlternativeAffairs/>*/}\r\n\t\t\t<hr/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        \r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n        \r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        \r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    \r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`\r\n    \r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                \r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (name: string) => void\r\n    addUser: () => void\r\n    error: boolean\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    return (\r\n        <div className={s.greeting}>\r\n            <span>\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setNameCallback}\r\n                    onEnter={addUser}\r\n                    spanClassName={s.errorMessage}\r\n                    error={error ? 'Please enter you name' : ''}\r\n                />\r\n            </span>\r\n            <SuperButton\r\n                className={s.addButton}\r\n                onClick={addUser}\r\n                disabled={name === ''}\r\n            > add\r\n            </SuperButton>\r\n            <span className={s.totalUsers}>users: {totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const setNameCallback = (name: string) => {\r\n        setError(false)\r\n        setName(name)\r\n    }\r\n    const addUser = () => {\r\n        const trimmedName = name.trim()\r\n        if (trimmedName !== '') {\r\n            alert(`Hello ${trimmedName} !`)\r\n            addUserCallback(trimmedName)\r\n        }\r\n        setError(trimmedName === '')\r\n        setName('')\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from './Greeting.module.css';\r\n\r\ntype PropsType = {\r\n    name: string\r\n    usersCount: number\r\n    changeName: (name: string) => void\r\n    confirm: () => void\r\n    greetingMessage: string | null\r\n    errorMessage: string | null\r\n}\r\n\r\nexport const AlternativeGreeting: React.FC<PropsType> = (props) => {\r\n\r\n    const onChangeNameHandler = (e: ChangeEvent<HTMLInputElement>) =>\r\n        props.changeName(e.currentTarget.value)\r\n\r\n    const onClickConfirmHandler = () => props.confirm()\r\n\r\n    const onKeyPressHandler = (e:KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            props.confirm()\r\n        }\r\n    };\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div><input\r\n                type=\"text\"\r\n                value={props.name}\r\n                onChange={onChangeNameHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                placeholder='Enter your name'/>\r\n                <button\r\n                    onClick={onClickConfirmHandler}\r\n                    disabled={props.name === ''}\r\n                > add\r\n                </button>\r\n            </div>\r\n            {props.errorMessage && <div className={s.alternativeErrorMessage}>{props.errorMessage}</div>}\r\n            <div className={s.totalUsers}>users: {props.usersCount}</div>\r\n\r\n            {props.greetingMessage && <div className={s.alternativeGreetingMessage}>{props.greetingMessage}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlternativeGreeting;\r\n","import React, {useState} from \"react\";\r\nimport AlternativeGreeting from \"./AlternativeGreeting\";\r\n\r\ntype PropsType = {\r\n    usersCount: number\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst AlternativeGreetingContainer: React.FC<PropsType> = (props) => {\r\n    \r\n    const [name, setName] = useState<string>('')\r\n    const [greetingMessage, setGreetingMessage] = useState<string | null>(null)\r\n    const [errorMessage, setErrorMessage] = useState<string | null>(null)\r\n    \r\n    const changeName = (newName: string) => {\r\n        const trimmedName = newName.trim();\r\n        if (trimmedName !== newName) {\r\n            setErrorMessage('Spaces are not allowed')\r\n            setTimeout(() => setErrorMessage(null), 1000)\r\n        } else {\r\n            setErrorMessage(null)\r\n        }\r\n        setName(trimmedName)\r\n    }\r\n    \r\n    const confirm = () => {\r\n        props.addUserCallback(name)\r\n        setGreetingMessage(`Hi ${name} !`)\r\n        setTimeout(() => setGreetingMessage(null), 2000)\r\n        setName('')\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <AlternativeGreeting\r\n                name={name}\r\n                usersCount={props.usersCount}\r\n                changeName={changeName}\r\n                confirm={confirm}\r\n                greetingMessage={greetingMessage}\r\n                errorMessage={errorMessage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default AlternativeGreetingContainer","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\nimport AlternativeGreetingContainer from \"./AlternativeGreetingContainer\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([])\r\n    \r\n    const addUserCallback = (name: string) => {\r\n        setUsers([...users, {_id: v1(), name}])\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            \r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            \r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            <AlternativeGreetingContainer usersCount={users.length} addUserCallback={addUserCallback}/>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        \r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n    \r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n    \r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                \r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'please enter text'\r\n    \r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n    \r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n    \r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n            \r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n                \r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n                \r\n                {/*----------------------------------------------------*/}\r\n                \r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n                \r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                \r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n                \r\n                {/*----------------------------------------------------*/}\r\n                \r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                \r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            \r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}